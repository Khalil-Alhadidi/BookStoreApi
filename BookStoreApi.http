# To build and run with Docker:
# docker build -t bookstoreapi .
# docker run -p 5136:5136 bookstoreapi

@baseUrl = https://localhost:5136
@adminToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoiYWRtaW4iLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9lbWFpbGFkZHJlc3MiOiJhZG1pbkBleGFtcGxlLmNvbSIsInN1YiI6IjIiLCJqdGkiOiI2ZGQ2Y2RmOS0wNzY5LTRjYmMtOWFkNC1jMzcxOTc0NTI0NzYiLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3JvbGUiOiJBZG1pbiIsImV4cCI6MTc0Nzg0NzcwMSwiaXNzIjoiQm9va1N0b3JlQXBpIiwiYXVkIjoiQm9va1N0b3JlQXBpIn0.k9xxsE8SCssUzmXMrV3JwonOHXKHGmIcRHpqu1Lv0L0
@userToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoibmV3dXNlciIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL2VtYWlsYWRkcmVzcyI6Im5ld3VzZXJAZXhhbXBsZS5jb20iLCJzdWIiOiIzIiwianRpIjoiZDE5MDYzM2QtY2QwYy00ZGE0LTkxYjMtZjlkMWQ5YjU0ODYxIiwiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2NsYWltcy9yb2xlIjoiVXNlciIsImV4cCI6MTc0Nzg0NzcyNywiaXNzIjoiQm9va1N0b3JlQXBpIiwiYXVkIjoiQm9va1N0b3JlQXBpIn0.YIF4y0xHijeXHO1W7aUVQLEVPSLM9I2VkFF9vamnMaU

### Login as Admin
POST {{baseUrl}}/api/v1/auth/login
Content-Type: application/json

{
    "username": "admin",
    "password": "Aa@12340000"
}

### Login as Regular User
POST {{baseUrl}}/api/v1/auth/login
Content-Type: application/json

{
    "username": "newuser",
    "password": "Password123!"
}

### Login as Regular User
POST {{baseUrl}}/api/v1/auth/login
Content-Type: application/json

{
    "username": "user",
    "password": "Uu@12340000"
}


### Register New User (Admin Only)
POST {{baseUrl}}/api/auth/register
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
    "username": "user",
    "email": "newuser@example.com",
    "password": "Uu@12340000"
}

### Request Password Reset
POST {{baseUrl}}/api/auth/forgot-password
Content-Type: application/json

{
    "email": "newuser@example.com"
}

### Reset Password
POST {{baseUrl}}/api/auth/reset-password
Content-Type: application/json

{
    "email": "newuser@example.com",
    "token": "your-reset-token-here",
    "newPassword": "NewPassword123!"
}

### Refresh Token
POST {{baseUrl}}/api/auth/refresh
Content-Type: application/json

{
    "refreshToken": "8d525509-2aeb-4529-80c9-4e6eb2094487"
}

### Get All Books (Public)
GET {{baseUrl}}/api/v1/books

### Get Book by ID (Public)
GET {{baseUrl}}/api/v1/books/4

### Search Books by Title (Public)
GET {{baseUrl}}/api/v1/books/search?title=great

### Create New Book (Authenticated)
POST {{baseUrl}}/api/v1/books
Authorization: Bearer {{userToken}}
Content-Type: application/json

{
    "title": "New Book by NewUser",
    "author": "e",
    "isbn": "1234567890",
    "price": 129.99,
    "publishedDate": "2024-01-01T00:00:00",
    "description": "Book description"
}

### Update Book (Authenticated)
PUT {{baseUrl}}/api/books/13
Authorization: Bearer {{userToken}}
Content-Type: application/json

{
    "id": 13,
    "title": "Updated Book Title with id 13",
    "author": "Updated Author",
    "isbn": "13131313",
    "price": 1039.99,
    "publishedDate": "2024-01-01T00:00:00",
    "description": "Updated book description"
}

### Delete Book (Authenticated)
DELETE {{baseUrl}}/api/books/12
Authorization: Bearer {{userToken}}

### Health Check
GET {{baseUrl}}/health
